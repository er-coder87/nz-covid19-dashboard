{"ast":null,"code":"import*as React from'react';import{Line}from'react-chartjs-2';import{formatDateToString}from'./Overview';export var TotalCases=function TotalCases(_ref){var totalData=_ref.totalData;var dates=Array.from(new Set(totalData.map(function(item){return item.dateOfReport;})));var dailyRates=[];dates.reverse().forEach(function(date,index){var dailyRate=totalData.filter(function(item){return item.dateOfReport===date;});if(index===0){dailyRates.push({date:new Date(date||''),number:dailyRate.length,totalNumber:dailyRate.length});}else{dailyRates.push({date:new Date(date||''),number:dailyRate.length,totalNumber:dailyRate.length+dailyRates[index-1].totalNumber});}});var totalNumber=dailyRates.map(function(a){return a.totalNumber;});var day=dailyRates.map(function(a){return formatDateToString(a.date);});var data={datasets:[{data:totalNumber,backgroundColor:'rgba(255,99,132,0.2)',borderColor:'rgba(255,99,132,1)',hoverBackgroundColor:'rgba(255,99,132,0.4)',hoverBorderColor:'rgba(255,99,132,1)'}],labels:day};return/*#__PURE__*/React.createElement(Line,{data:data,width:900,height:400,options:{responsive:false,maintainAspectRatio:true,legend:{display:false},scales:{yAxes:[{ticks:{beginAtZero:true,fontColor:'white'}}],xAxes:[{ticks:{fontColor:'white'}}]}}});};","map":{"version":3,"sources":["/Users/eric.lim/dev/scratch/e-commerce-app/src/components/TotalCases.tsx"],"names":["React","Line","formatDateToString","TotalCases","totalData","dates","Array","from","Set","map","item","dateOfReport","dailyRates","reverse","forEach","date","index","dailyRate","filter","push","Date","number","length","totalNumber","a","day","data","datasets","backgroundColor","borderColor","hoverBackgroundColor","hoverBorderColor","labels","responsive","maintainAspectRatio","legend","display","scales","yAxes","ticks","beginAtZero","fontColor","xAxes"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,kBAAT,KAAmC,YAAnC,CAEA,MAAO,IAAMC,CAAAA,UAA8C,CAAG,QAAjDA,CAAAA,UAAiD,MAAmB,IAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,CAC/E,GAAMC,CAAAA,KAAK,CAAGC,KAAK,CAACC,IAAN,CAAW,GAAIC,CAAAA,GAAJ,CAAQJ,SAAS,CAACK,GAAV,CAAc,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,YAAT,EAAlB,CAAR,CAAX,CAAd,CACA,GAAMC,CAAAA,UAAiE,CAAG,EAA1E,CAEAP,KAAK,CAACQ,OAAN,GAAgBC,OAAhB,CAAwB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACvC,GAAMC,CAAAA,SAAS,CAAGb,SAAS,CAACc,MAAV,CAAiB,SAAAR,IAAI,QAAIA,CAAAA,IAAI,CAACC,YAAL,GAAsBI,IAA1B,EAArB,CAAlB,CACA,GAAIC,KAAK,GAAK,CAAd,CAAiB,CACfJ,UAAU,CAACO,IAAX,CAAgB,CACdJ,IAAI,CAAE,GAAIK,CAAAA,IAAJ,CAASL,IAAI,EAAI,EAAjB,CADQ,CAEdM,MAAM,CAAEJ,SAAS,CAACK,MAFJ,CAGdC,WAAW,CAAEN,SAAS,CAACK,MAHT,CAAhB,EAKD,CAND,IAMO,CACLV,UAAU,CAACO,IAAX,CAAgB,CACdJ,IAAI,CAAE,GAAIK,CAAAA,IAAJ,CAASL,IAAI,EAAI,EAAjB,CADQ,CAEdM,MAAM,CAAEJ,SAAS,CAACK,MAFJ,CAGdC,WAAW,CAAEN,SAAS,CAACK,MAAV,CAAmBV,UAAU,CAACI,KAAK,CAAG,CAAT,CAAV,CAAsBO,WAHxC,CAAhB,EAKD,CACF,CAfD,EAgBA,GAAIA,CAAAA,WAAW,CAAGX,UAAU,CAACH,GAAX,CAAe,SAAAe,CAAC,QAAIA,CAAAA,CAAC,CAACD,WAAN,EAAhB,CAAlB,CACA,GAAIE,CAAAA,GAAG,CAAGb,UAAU,CAACH,GAAX,CAAe,SAAAe,CAAC,QAAItB,CAAAA,kBAAkB,CAACsB,CAAC,CAACT,IAAH,CAAtB,EAAhB,CAAV,CAEA,GAAMW,CAAAA,IAAI,CAAG,CACXC,QAAQ,CAAE,CACR,CACED,IAAI,CAAEH,WADR,CAEEK,eAAe,CAAE,sBAFnB,CAGEC,WAAW,CAAE,oBAHf,CAIEC,oBAAoB,CAAE,sBAJxB,CAKEC,gBAAgB,CAAE,oBALpB,CADQ,CADC,CAUXC,MAAM,CAAEP,GAVG,CAAb,CAaA,mBACE,oBAAC,IAAD,EACE,IAAI,CAAEC,IADR,CAEE,KAAK,CAAE,GAFT,CAGE,MAAM,CAAE,GAHV,CAIE,OAAO,CAAE,CACPO,UAAU,CAAE,KADL,CAEPC,mBAAmB,CAAE,IAFd,CAGPC,MAAM,CAAE,CACNC,OAAO,CAAE,KADH,CAHD,CAMPC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEC,KAAK,CAAE,CACLC,WAAW,CAAE,IADR,CAELC,SAAS,CAAE,OAFN,CADT,CADK,CADD,CASNC,KAAK,CAAE,CACL,CACEH,KAAK,CAAE,CACLE,SAAS,CAAE,OADN,CADT,CADK,CATD,CAND,CAJX,EADF,CA+BD,CAnEM","sourcesContent":["import * as React from 'react';\nimport { TotalData } from './Sex';\nimport { Line } from 'react-chartjs-2';\nimport { formatDateToString } from './Overview';\n\nexport const TotalCases: React.FunctionComponent<TotalData> = ({ totalData }) => {\n  const dates = Array.from(new Set(totalData.map(item => item.dateOfReport)));\n  const dailyRates: { date: Date; number: number; totalNumber: number }[] = [];\n\n  dates.reverse().forEach((date, index) => {\n    const dailyRate = totalData.filter(item => item.dateOfReport === date);\n    if (index === 0) {\n      dailyRates.push({\n        date: new Date(date || ''),\n        number: dailyRate.length,\n        totalNumber: dailyRate.length,\n      });\n    } else {\n      dailyRates.push({\n        date: new Date(date || ''),\n        number: dailyRate.length,\n        totalNumber: dailyRate.length + dailyRates[index - 1].totalNumber,\n      });\n    }\n  });\n  let totalNumber = dailyRates.map(a => a.totalNumber);\n  let day = dailyRates.map(a => formatDateToString(a.date));\n\n  const data = {\n    datasets: [\n      {\n        data: totalNumber,\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n      },\n    ],\n    labels: day,\n  };\n\n  return (\n    <Line\n      data={data}\n      width={900}\n      height={400}\n      options={{\n        responsive: false,\n        maintainAspectRatio: true,\n        legend: {\n          display: false,\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                fontColor: 'white',\n              },\n            },\n          ],\n          xAxes: [\n            {\n              ticks: {\n                fontColor: 'white',\n              },\n            },\n          ],\n        },\n      }}\n    ></Line>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}