{"ast":null,"code":"var _jsxFileName = \"/Users/eric.lim/dev/scratch/e-commerce-app/src/components/Dhb.tsx\";\nimport * as React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { TitledSection } from '../common/TiledSection';\n\nconst Dhb = ({\n  totalData\n}) => {\n  const areas = Array.from(new Set(totalData.map(item => item.dhb)));\n  const infectedAreas = [];\n  areas.forEach(area => {\n    const mapped = totalData.filter(item => item.dhb === area);\n    infectedAreas.push({\n      area: area,\n      number: mapped.length\n    });\n  });\n  const data = {\n    datasets: [{\n      data: infectedAreas.map(area => area.number),\n      backgroundColor: '#FF6384'\n    }],\n    labels: infectedAreas.map(area => area.area)\n  };\n  return /*#__PURE__*/React.createElement(TitledSection, {\n    title: \"Region\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    width: 400,\n    height: 400,\n    options: {\n      responsive: false,\n      maintainAspectRatio: true,\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            fontColor: 'white'\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            fontColor: 'white'\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Dhb;","map":{"version":3,"sources":["/Users/eric.lim/dev/scratch/e-commerce-app/src/components/Dhb.tsx"],"names":["React","Bar","TitledSection","Dhb","totalData","areas","Array","from","Set","map","item","dhb","infectedAreas","forEach","area","mapped","filter","push","number","length","data","datasets","backgroundColor","labels","responsive","maintainAspectRatio","legend","display","scales","yAxes","ticks","beginAtZero","fontColor","xAxes"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAGA,MAAMC,GAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACjE,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,SAAS,CAACK,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACC,GAA3B,CAAR,CAAX,CAAd;AAEA,QAAMC,aAA6D,GAAG,EAAtE;AAEAP,EAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAI,IAAI;AACpB,UAAMC,MAAM,GAAGX,SAAS,CAACY,MAAV,CAAiBN,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaG,IAAtC,CAAf;AACAF,IAAAA,aAAa,CAACK,IAAd,CAAmB;AACjBH,MAAAA,IAAI,EAAEA,IADW;AAEjBI,MAAAA,MAAM,EAAEH,MAAM,CAACI;AAFE,KAAnB;AAID,GAND;AAQA,QAAMC,IAAI,GAAG;AACXC,IAAAA,QAAQ,EAAE,CACR;AACED,MAAAA,IAAI,EAAER,aAAa,CAACH,GAAd,CAAkBK,IAAI,IAAIA,IAAI,CAACI,MAA/B,CADR;AAEEI,MAAAA,eAAe,EAAE;AAFnB,KADQ,CADC;AAOXC,IAAAA,MAAM,EAAEX,aAAa,CAACH,GAAd,CAAkBK,IAAI,IAAIA,IAAI,CAACA,IAA/B;AAPG,GAAb;AAUA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEM,IADR;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,OAAO,EAAE;AACPI,MAAAA,UAAU,EAAE,KADL;AAEPC,MAAAA,mBAAmB,EAAE,IAFd;AAGPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH,OAHD;AAMPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE,IADR;AAELC,YAAAA,SAAS,EAAE;AAFN;AADT,SADK,CADD;AASNC,QAAAA,KAAK,EAAE,CACL;AACEH,UAAAA,KAAK,EAAE;AACLE,YAAAA,SAAS,EAAE;AADN;AADT,SADK;AATD;AAND,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiCD,CAxDD;;AA0DA,eAAe7B,GAAf","sourcesContent":["import * as React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { TitledSection } from '../common/TiledSection';\nimport { TotalData } from '../containers/Dashboard';\n\nconst Dhb: React.FunctionComponent<TotalData> = ({ totalData }) => {\n  const areas = Array.from(new Set(totalData.map(item => item.dhb)));\n\n  const infectedAreas: { area: string | undefined; number: number }[] = [];\n\n  areas.forEach(area => {\n    const mapped = totalData.filter(item => item.dhb === area);\n    infectedAreas.push({\n      area: area,\n      number: mapped.length,\n    });\n  });\n\n  const data = {\n    datasets: [\n      {\n        data: infectedAreas.map(area => area.number),\n        backgroundColor: '#FF6384',\n      },\n    ],\n    labels: infectedAreas.map(area => area.area),\n  };\n\n  return (\n    <TitledSection title=\"Region\">\n      <Bar\n        data={data}\n        width={400}\n        height={400}\n        options={{\n          responsive: false,\n          maintainAspectRatio: true,\n          legend: {\n            display: false,\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  fontColor: 'white',\n                },\n              },\n            ],\n            xAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </TitledSection>\n  );\n};\n\nexport default Dhb;\n"]},"metadata":{},"sourceType":"module"}