{"ast":null,"code":"import axios from 'axios';\nexport const getData = () => {\n  /* set up XMLHttpRequest */\n  //   var url =\n  //     'https://www.health.govt.nz/system/files/documents/pages/covid-19-case-details-update-4-april-2020.xlsx';\n  //   var oReq = new XMLHttpRequest();\n  //   oReq.open('GET', url, true);\n  //   oReq.responseType = 'arraybuffer';\n  axios({\n    url: 'https://www.health.govt.nz/system/files/documents/pages/covid-19-case-details-update-4-april-2020.xlsx',\n    //your url\n    method: 'GET',\n    responseType: 'blob' // important\n\n  }).then(response => {\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'file.pdf'); //or any other extension\n\n    document.body.appendChild(link);\n    link.click();\n  }).catch(error => console.log('error'));\n}; //   oReq.onload = function (e) {\n//     var arraybuffer = oReq.response;\n//     /* convert data to binary string */\n//     var data = new Uint8Array(arraybuffer);\n//     var arr = [];\n//     for (var i = 0; i !== data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n//     var bstr = arr.join('');\n//     /* Call XLSX */\n//     var workbook = XLSX.read(bstr, {\n//       type: 'binary',\n//     });\n//     /* DO SOMETHING WITH workbook HERE */\n//     var first_sheet_name = workbook.SheetNames[0];\n//     /* Get worksheet */\n//     var worksheet = workbook.Sheets[first_sheet_name];\n//     console.log(\n//       XLSX.utils.sheet_to_json(worksheet, {\n//         raw: true,\n//       }),\n//     );\n//   };\n//   oReq.send();","map":{"version":3,"sources":["/Users/eric.lim/dev/scratch/covid19-dashboard/src/data/getData.ts"],"names":["axios","getData","url","method","responseType","then","response","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","catch","error","console","log"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AAEAD,EAAAA,KAAK,CAAC;AACJE,IAAAA,GAAG,EACD,wGAFE;AAEwG;AAC5GC,IAAAA,MAAM,EAAE,KAHJ;AAIJC,IAAAA,YAAY,EAAE,MAJV,CAIkB;;AAJlB,GAAD,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAI;AAChB,UAAMJ,GAAG,GAAGK,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACJ,QAAQ,CAACK,IAAV,CAAT,CAA3B,CAAZ;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAYb,GAAZ;AACAU,IAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,UAA9B,EAJgB,CAI2B;;AAC3CH,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,IAAAA,IAAI,CAACO,KAAL;AACD,GAbH,EAcGC,KAdH,CAcSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAdlB;AAeD,CAvBM,C,CAwBP;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import XLSX from 'xlsx';\nimport axios from 'axios';\n\nexport const getData = () => {\n  /* set up XMLHttpRequest */\n  //   var url =\n  //     'https://www.health.govt.nz/system/files/documents/pages/covid-19-case-details-update-4-april-2020.xlsx';\n  //   var oReq = new XMLHttpRequest();\n  //   oReq.open('GET', url, true);\n  //   oReq.responseType = 'arraybuffer';\n\n  axios({\n    url:\n      'https://www.health.govt.nz/system/files/documents/pages/covid-19-case-details-update-4-april-2020.xlsx', //your url\n    method: 'GET',\n    responseType: 'blob', // important\n  })\n    .then(response => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'file.pdf'); //or any other extension\n      document.body.appendChild(link);\n      link.click();\n    })\n    .catch(error => console.log('error'));\n};\n//   oReq.onload = function (e) {\n//     var arraybuffer = oReq.response;\n\n//     /* convert data to binary string */\n//     var data = new Uint8Array(arraybuffer);\n//     var arr = [];\n//     for (var i = 0; i !== data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n//     var bstr = arr.join('');\n\n//     /* Call XLSX */\n//     var workbook = XLSX.read(bstr, {\n//       type: 'binary',\n//     });\n\n//     /* DO SOMETHING WITH workbook HERE */\n//     var first_sheet_name = workbook.SheetNames[0];\n//     /* Get worksheet */\n//     var worksheet = workbook.Sheets[first_sheet_name];\n//     console.log(\n//       XLSX.utils.sheet_to_json(worksheet, {\n//         raw: true,\n//       }),\n//     );\n//   };\n\n//   oReq.send();\n"]},"metadata":{},"sourceType":"module"}