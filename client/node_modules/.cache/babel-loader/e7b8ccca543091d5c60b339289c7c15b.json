{"ast":null,"code":"var _jsxFileName = \"/Users/eric.lim/dev/scratch/e-commerce-app/src/components/TotalCases.tsx\";\nimport * as React from 'react';\nimport { Line } from 'react-chartjs-2';\nexport const TotalCases = ({\n  totalData\n}) => {\n  const dates = Array.from(new Set(totalData.map(item => item.dateOfReport)));\n  const dailyRates = [];\n  dates.reverse().forEach((date, index) => {\n    const dailyRate = totalData.filter(item => item.dateOfReport === date);\n\n    if (index === 0) {\n      dailyRates.push({\n        date: new Date(date),\n        number: dailyRate.length,\n        totalNumber: dailyRate.length\n      });\n    } else {\n      dailyRates.push({\n        date: new Date(date),\n        number: dailyRate.length,\n        totalNumber: dailyRate.length + dailyRates[index - 1].totalNumber\n      });\n    }\n  });\n  let totalNumber = dailyRates.map(a => a.totalNumber);\n  let day = dailyRates.map(a => a.date);\n  const data = {\n    datasets: [{\n      data: totalNumber\n    }],\n    labels: day\n  };\n  console.log(totalNumber);\n  return /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    width: 1000,\n    height: 400,\n    options: {\n      responsive: false,\n      maintainAspectRatio: true,\n      legend: {\n        display: false\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/Users/eric.lim/dev/scratch/e-commerce-app/src/components/TotalCases.tsx"],"names":["React","Line","TotalCases","totalData","dates","Array","from","Set","map","item","dateOfReport","dailyRates","reverse","forEach","date","index","dailyRate","filter","push","Date","number","length","totalNumber","a","day","data","datasets","labels","console","log","responsive","maintainAspectRatio","legend","display"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAO,MAAMC,UAA8C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC/E,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,SAAS,CAACK,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACC,YAA3B,CAAR,CAAX,CAAd;AACA,QAAMC,UAA6E,GAAG,EAAtF;AAEAP,EAAAA,KAAK,CAACQ,OAAN,GAAgBC,OAAhB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,UAAMC,SAAS,GAAGb,SAAS,CAACc,MAAV,CAAiBR,IAAI,IAAIA,IAAI,CAACC,YAAL,KAAsBI,IAA/C,CAAlB;;AACA,QAAIC,KAAK,KAAK,CAAd,EAAiB;AACfJ,MAAAA,UAAU,CAACO,IAAX,CAAgB;AACdJ,QAAAA,IAAI,EAAE,IAAIK,IAAJ,CAASL,IAAT,CADQ;AAEdM,QAAAA,MAAM,EAAEJ,SAAS,CAACK,MAFJ;AAGdC,QAAAA,WAAW,EAAEN,SAAS,CAACK;AAHT,OAAhB;AAKD,KAND,MAMO;AACLV,MAAAA,UAAU,CAACO,IAAX,CAAgB;AACdJ,QAAAA,IAAI,EAAE,IAAIK,IAAJ,CAASL,IAAT,CADQ;AAEdM,QAAAA,MAAM,EAAEJ,SAAS,CAACK,MAFJ;AAGdC,QAAAA,WAAW,EAAEN,SAAS,CAACK,MAAV,GAAmBV,UAAU,CAACI,KAAK,GAAG,CAAT,CAAV,CAAsBO;AAHxC,OAAhB;AAKD;AACF,GAfD;AAgBA,MAAIA,WAAW,GAAGX,UAAU,CAACH,GAAX,CAAee,CAAC,IAAIA,CAAC,CAACD,WAAtB,CAAlB;AACA,MAAIE,GAAG,GAAGb,UAAU,CAACH,GAAX,CAAee,CAAC,IAAIA,CAAC,CAACT,IAAtB,CAAV;AAEA,QAAMW,IAAI,GAAG;AACXC,IAAAA,QAAQ,EAAE,CACR;AACED,MAAAA,IAAI,EAAEH;AADR,KADQ,CADC;AAMXK,IAAAA,MAAM,EAAEH;AANG,GAAb;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACA,sBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,KAAK,EAAE,IAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,OAAO,EAAE;AACPK,MAAAA,UAAU,EAAE,KADL;AAEPC,MAAAA,mBAAmB,EAAE,IAFd;AAGPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AAHD,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CA/CM","sourcesContent":["import * as React from 'react';\nimport { TotalData } from './Sex';\nimport { Line } from 'react-chartjs-2';\n\nexport const TotalCases: React.FunctionComponent<TotalData> = ({ totalData }) => {\n  const dates = Array.from(new Set(totalData.map(item => item.dateOfReport)));\n  const dailyRates: { date: Date | undefined; number: number; totalNumber: number }[] = [];\n\n  dates.reverse().forEach((date, index) => {\n    const dailyRate = totalData.filter(item => item.dateOfReport === date);\n    if (index === 0) {\n      dailyRates.push({\n        date: new Date(date),\n        number: dailyRate.length,\n        totalNumber: dailyRate.length,\n      });\n    } else {\n      dailyRates.push({\n        date: new Date(date),\n        number: dailyRate.length,\n        totalNumber: dailyRate.length + dailyRates[index - 1].totalNumber,\n      });\n    }\n  });\n  let totalNumber = dailyRates.map(a => a.totalNumber);\n  let day = dailyRates.map(a => a.date);\n\n  const data = {\n    datasets: [\n      {\n        data: totalNumber,\n      },\n    ],\n    labels: day,\n  };\n\n  console.log(totalNumber);\n  return (\n    <Line\n      data={data}\n      width={1000}\n      height={400}\n      options={{\n        responsive: false,\n        maintainAspectRatio: true,\n        legend: {\n          display: false,\n        },\n      }}\n    ></Line>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}